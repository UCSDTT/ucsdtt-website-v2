import { S as SvelteComponentDev, i as init, s as safe_not_equal, a as space, e as element, t as text, d as claim_text, c as claim_element, b as children, f as detach, h as add_location, j as insert, k as append, n as noop } from './chunk.b5534b6a.js';
import './chunk.ccbdf3ce.js';

/* src/routes/members.svelte generated by Svelte v3.6.2 */

const file = "src/routes/members.svelte";

function create_fragment(ctx) {
	var t0, h1, t1;

	return {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Members");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n");

			h1 = claim_element(nodes, "H1", {}, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Members");
			h1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			document.title = "Members";
			add_location(h1, file, 17, 0, 236);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, h1, anchor);
			append(h1, t1);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(h1);
			}
		}
	};
}

function instance($$self) {

	return {};
}

class Members extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
	}
}

export default Members;
